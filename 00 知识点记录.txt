元素大小写：不区分



元素分类：

​	按标签形式分类：单标签元素（虚元素，有两种表示法，一种只使用开始标签，一种在开始标签后面加一个斜杠符号）、双标签（没有内容时称为空元素，可以简洁地用单标签的第二种表示法表示，称为自闭合标签，PS:vue组件经常这样使用）

​	HTML5规范分类：元数据元素 ( metadataelement )、流元素 ( flowelement) 和短语元素 ( phrasing element)。

元数据元素用来构建HTML文档的基本结构，以及 就如何处理文档向浏览器提供信息和指示。另外两种元素的用途是确定一个元素合法的父元素和子元素范围。短语元素是HTML的基本成分。流元素是短语元素的超集。有些元素无法归人上述三种类型，这些元素要么没有什么特别的含义，要么只能用在一些非常有限的情况下。li 元素就是受限元素的一个例子。它表示列表项，只能有 三种父元素： ol  (表 示有序列表     ）、ul   ( 表示无序列表      ）和 menu ( 表示莱单 ）。





文档树（抽象为文档对象模型）：父元素、子元素、后代元素和兄弟元素



HTML实体（转义字符）



CSS定义样式：CSS样式由一条或多条以分号隔开的样式声明组成。每条声明包含着一个                       CSS  属性（property）和该属性的值，二者以冒号分隔。示例：color:red; font-size:20px;



CSS应用样式的方式：元素内嵌样式、文档内嵌样式、外部样式表（link @import  @charset "UTF-8"如果样式表中未声明所使用的字符编码，那么浏览器将使用载入该样式表的 HTML文档声明的编码。要是HTML文档也没有声明其编码，那么默认情况下使用的将是  UTF-8。）



样式的层叠和继承：要想掌握样式表，弄清样式层叠和继承这两个概念是关键。浏览器根据层叠和继承规则确定显示一个元素时各种样式属性采用的值。每个元素都有一套浏览器呈现页面时要用到的  CSS属性。对于每一个这种属性，浏览器都需要查看一下其所有的样式来源。前面已经讲过三种定义样式的方式（元素内嵌、文档内嵌和外部样式表），但是要知道，样式还有另外两个来源。



浏览器样式（更恰当的名称是用户代理样式）是元素尚未设置样式时浏览器应用在它身上的默认样式。这些样式因浏览器而略有，差不异过大体一致。多数元素都有默认的浏览器样式。



用户样式：大多数浏览器都允许用户定义自己的样式表。这类样式表中包含的样式称为用户样式。



 样式如何层叠

明白了浏览器所要查看的所有样式来源之后，现在可以看看浏览器要显示元素时求索一个

CSS属性值的次序。这个次序很明确：

(1 ) 元素内嵌样式．（用元素的全局属s性t yle 定义的样式  ）；

( 2) 文档内嵌样式（定义在st yle 元素中的样式  ）；

(3)外部样式（用li nk元素导人的样式    ）；

(4)   用户样式（用户定义的样式            ）；

(5)   浏览器样式（浏览器应用的默认样式                  ）。



调整层叠次序：!import

能凌驾于作者定义的重要属性值之上的只有用户样式表中定义的重要属性值。对于普通属性，作者样式中的值优先于用户样式中的值，而对于重要属性情况正好相反。



解决同级样式冲突：权重和定义顺序，权重高优先，权重一样后来者优先



样式继承：如果浏览器在直接相关的样式中找不到某个属性的值，就会求助于继承机制，使用父元素的这个样式属性值。



并非所有  CSS属性均可继承。这方面有条经验可供参考：与元素外观（文字颜色、字体等）相关的样式会被继承；与元素在页面上的布局相关的样式不会被继承。在样式中使用inherit   这个特别设   立的值可以强行实施继承，明确指示浏览器在该属性上使用父元素样式中的值。
